document.addEventListener('DOMContentLoaded', function() {
    const regions = [
    "–ê–¥—ã–≥–µ—è", "–ê–ª—Ç–∞–π", "–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π", "–ê–º—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω", "–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ë—Ä—è–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ë—É—Ä—è—Ç–∏—è", "–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–í–æ–ª–æ–≥–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–î–∞–≥–µ—Å—Ç–∞–Ω", "–ï–≤—Ä–µ–π—Å–∫–∞—è –ê–û", "–ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–∏–π –∫—Ä–∞–π", "–ò–≤–∞–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ò–Ω–≥—É—à–µ—Ç–∏—è", "–ò—Ä–∫—É—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–∞–±–∞—Ä–¥–∏–Ω–æ-–ë–∞–ª–∫–∞—Ä–∏—è", "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ö–∞–ª–º—ã–∫–∏—è", "–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–∞–º—á–∞—Ç—Å–∫–∏–π –∫—Ä–∞–π", "–ö–∞—Ä–∞—á–∞–µ–≤–æ-–ß–µ—Ä–∫–µ—Å–∏—è", "–ö–∞—Ä–µ–ª–∏—è",
    "–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–∏—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–æ–º–∏", "–ö–æ—Å—Ç—Ä–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π",
    "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö—Ä—ã–º", "–ö—É—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–õ–∏–ø–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ú–∞–≥–∞–¥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ú–∞—Ä–∏–π –≠–ª", "–ú–æ—Ä–¥–æ–≤–∏—è", "–ú–æ—Å–∫–≤–∞",
    "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ú—É—Ä–º–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ù–µ–Ω–µ—Ü–∫–∏–π –ê–û", "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–ù–æ–≤–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–û–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–û—Ä–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ü–µ–Ω–∑–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ü–µ—Ä–º—Å–∫–∏–π –∫—Ä–∞–π", "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π",
    "–ü—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–†—è–∑–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–°–∞–º–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–°–∞—Ä–∞—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–°–∞—Ö–∞ (–Ø–∫—É—Ç–∏—è)", "–°–∞—Ö–∞–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è", "–°–º–æ–ª–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å—Å–∫–∏–π –∫—Ä–∞–π",
    "–¢–∞–º–±–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω", "–¢–≤–µ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–¢–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–¢—É–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "–¢—ã–≤–∞", "–¢—é–º–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–£–¥–º—É—Ä—Ç–∏—è", "–£–ª—å—è–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π –∫—Ä–∞–π",
    "–•–∞–∫–∞—Å–∏—è", "–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫–∏–π –ê–û", "–ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ß–µ—á–µ–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞", "–ß—É–≤–∞—à–∏—è",
    "–ß—É–∫–æ—Ç—Å–∫–∏–π –ê–û", "–Ø–º–∞–ª–æ-–ù–µ–Ω–µ—Ü–∫–∏–π –ê–û", "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–õ—É–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–î–æ–Ω–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–•–µ—Ä—Å–æ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"
];

    const container = document.getElementById('regionsContainer');
    const searchInput = document.getElementById('regionSearch');
    const resultsCounter = document.createElement('div');
    resultsCounter.className = 'results-counter';
    container.parentNode.insertBefore(resultsCounter, container);

    regions.forEach(region => {
        const card = document.createElement('div');
        card.className = 'region-card';
        card.innerHTML = `
            <div class="region-name">${region}</div>
            <button class="subscribe-btn" data-region="${region}">
                <span class="btn-text">–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</span>
                <span class="btn-icon">üîî</span>
            </button>
        `;
        container.appendChild(card);
    });

    searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const cards = document.querySelectorAll('.region-card');
        let visibleCount = 0;

        cards.forEach(card => {
            const regionName = card.querySelector('.region-name').textContent.toLowerCase();
            if (regionName.includes(searchTerm)) {
                card.classList.remove('hidden');
                visibleCount++;
            } else {
                card.classList.add('hidden');
            }
        });

        resultsCounter.textContent = `–ù–∞–π–¥–µ–Ω–æ —Ä–µ–≥–∏–æ–Ω–æ–≤: ${visibleCount} –∏–∑ ${regions.length}`;
    });

const clearSearch = document.getElementById('clearSearch');
clearSearch.addEventListener('click', function() {
    searchInput.value = '';
    searchInput.dispatchEvent(new Event('input'));
    searchInput.focus();
});


document.addEventListener('click', function(e) {
    if (e.target.closest('.subscribe-btn')) {
        const btn = e.target.closest('.subscribe-btn');
        const region = btn.getAttribute('data-region');
        const isSubscribed = btn.classList.contains('subscribed');
        
        if (isSubscribed) {
            btn.classList.remove('subscribed');
            btn.querySelector('.btn-text').textContent = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è';
            console.log(`–û—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç ${region}`);
        } else {
            btn.classList.add('subscribed');
            btn.querySelector('.btn-text').textContent = '–ü–æ–¥–ø–∏—Å–∞–Ω–æ';
            console.log(`–ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ ${region}`);
            }
        }
    });
});

document.addEventListener('DOMContentLoaded', function() {
    const subscribeButtons = document.querySelectorAll('.subscribe-btn');
    
    subscribeButtons.forEach(button => {
        button.addEventListener('click', function() {
            const region = this.getAttribute('data-region');
            const isSubscribed = this.classList.contains('subscribed');
            
            if (isSubscribed) {

                this.classList.remove('subscribed');
                this.querySelector('.btn-text').textContent = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è';
                console.log(`–û—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç ${region}`);
            } else {

                this.classList.add('subscribed');
                this.querySelector('.btn-text').textContent = '–ü–æ–¥–ø–∏—Å–∞–Ω–æ';
                console.log(`–ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ ${region}`);
                
            }
        });
    });
});

localStorage.setItem(`subscribed_${region}`, 'true');

regions.forEach(region => {
    if (localStorage.getItem(`subscribed_${region}`)) {
        const btn = document.querySelector(`[data-region="${region}"]`);
        btn.classList.add('subscribed');
        btn.querySelector('.btn-text').textContent = '–ü–æ–¥–ø–∏—Å–∞–Ω–æ';
    }
});
